# Правила для тестирования

```yaml
---
title: Правила для тестирования MCP-сервера и приложения-дневника
version: 1.0
date: 2025-06-29
dependencies:
  - tests/
  - frontend/tests/
priority: P1
estimated_duration: 1 day
responsible: QA Engineer
---
```

## Описание

Правила определяют стандарты для тестирования MCP-сервера и приложения-дневника, включая юнит-тесты, интеграционные тесты и E2E-тесты (Эпики 1–7). Они гарантируют надежность и качество кода.

## Правила
1. **Типы тестов**:
   - Юнит-тесты: проверка отдельных функций/классов (например, `AuthService.login`, Эпик 6).
   - Интеграционные тесты: проверка взаимодействия модулей (например, GraphQL + Яндекс.Диск, Эпики 2, 4).
   - E2E-тесты: проверка UI и API (Эпик 7).
2. **Инструменты**:
   - Backend: `pytest` для `tests/test_*.py` (Эпики 1–6, 8).
   - Frontend: `jest`, `react-testing-library` для `frontend/tests/` (Эпик 7).
3. **Покрытие**:
   - Добиваться покрытия >80%.
   - Проверять краевые случаи (пустые данные, ошибки API, Эпики 1–6).
4. **Моки**:
   - Использовать моки для внешних сервисов (Яндекс.Диск, xAI API, Telegram, Эпики 2, 5, 9).
   - Пример: `unittest.mock` для Telegram API.
5. **CI/CD**:
   - Интегрировать тесты в GitHub Actions (Эпики 1–7).
   - Проверять тесты перед merge в main.
6. **Логирование**:
   - Логировать результаты тестов в `reports/test_results.md`.
   - Отправлять уведомления о сбоях через Telegram (Эпик 9).

## Пример
- **Тест**: `tests/test_auth.py`
- **Сценарий**: Проверка JWT с неверным токеном (Эпик 6).
- **Результат**: Ошибка 401, лог в `auditLog.md`.